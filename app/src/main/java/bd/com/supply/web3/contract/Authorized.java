package bd.com.supply.web3.contract;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import rx.Observable;
import rx.functions.Func1;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.3.1.
 */
public class Authorized extends Contract {
    private static final String BINARY = "606060405234156200000d57fe5b60405162005fa338038062005fa3833981016040528080518201919060200180518201919050505b60005b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000905082600390805190602001906200009692919062001c33565b506004600060006006811115620000a957fe5b81526020019081526020016000208054806001018281620000cb919062001cba565b916000526020600020906005020160005b60a0604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200160018152602001604060405190810160405280600c81526020017fe58e82e5aeb6e7949fe4baa700000000000000000000000000000000000000008152508152602001600060068111156200017157fe5b815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030190805190602001906200022f92919062001cef565b506080820151816004015550505060046000600160068111156200024f57fe5b8152602001908152602001600020805480600101828162000271919062001cba565b916000526020600020906005020160005b60a0604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200160018152602001604060405190810160405280600c81526020017fe79c81e7baa7e4bba3e7908600000000000000000000000000000000000000008152508152602001600160068111156200031757fe5b815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190620003d592919062001cef565b50608082015181600401555050506004600060026006811115620003f557fe5b8152602001908152602001600020805480600101828162000417919062001cba565b916000526020600020906005020160005b60a0604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200160018152602001604060405190810160405280600c81526020017fe5b882e7baa7e4bba3e790860000000000000000000000000000000000000000815250815260200160026006811115620004bd57fe5b815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030190805190602001906200057b92919062001cef565b506080820151816004015550505060046000600360068111156200059b57fe5b81526020019081526020016000208054806001018281620005bd919062001cba565b916000526020600020906005020160005b60a0604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200160018152602001604060405190810160405280600681526020017fe59586e5aeb600000000000000000000000000000000000000000000000000008152508152602001600360068111156200066357fe5b815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030190805190602001906200072192919062001cef565b506080820151816004015550505060046000600460068111156200074157fe5b8152602001908152602001600020805480600101828162000763919062001cba565b916000526020600020906005020160005b60a0604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001600181526020016020604051908101604052806000815250815260200160046006811115620007e357fe5b815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190620008a192919062001cef565b50608082015181600401555050506004600060056006811115620008c157fe5b81526020019081526020016000208054806001018281620008e3919062001cba565b916000526020600020906005020160005b60a0604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020016001815260200160206040519081016040528060008152508152602001600560068111156200096357fe5b815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301908051906020019062000a2192919062001cef565b5060808201518160040155505050600460006006600681111562000a4157fe5b8152602001908152602001600020805480600101828162000a63919062001cba565b916000526020600020906005020160005b60a0604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200160018152602001602060405190810160405280600081525081526020016006600681111562000ae357fe5b815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301908051906020019062000ba192919062001cef565b50608082015181600401555050506005805480600101828162000bc5919062001d76565b916000526020600020900160005b6000600681111562000be157fe5b909190915055506005805480600101828162000bfe919062001d76565b916000526020600020900160005b6001600681111562000c1a57fe5b909190915055506005805480600101828162000c37919062001d76565b916000526020600020900160005b6002600681111562000c5357fe5b909190915055506005805480600101828162000c70919062001d76565b916000526020600020900160005b6003600681111562000c8c57fe5b909190915055506005805480600101828162000ca9919062001d76565b916000526020600020900160005b6004600681111562000cc557fe5b909190915055506005805480600101828162000ce2919062001d76565b916000526020600020900160005b6005600681111562000cfe57fe5b909190915055506005805480600101828162000d1b919062001d76565b916000526020600020900160005b6006600681111562000d3757fe5b90919091505550600660006000600681111562000d5057fe5b8152602001908152602001600020805480600101828162000d72919062001cba565b916000526020600020906005020160005b60a0604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200160018152602001602060405190810160405280600081525081526020016000600681111562000df257fe5b815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301908051906020019062000eb092919062001cef565b5060808201518160040155505050600660006001600681111562000ed057fe5b8152602001908152602001600020805480600101828162000ef2919062001cba565b916000526020600020906005020160005b60a0604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200160018152602001602060405190810160405280600081525081526020016001600681111562000f7257fe5b815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030190805190602001906200103092919062001cef565b506080820151816004015550505060066000600260068111156200105057fe5b8152602001908152602001600020805480600101828162001072919062001cba565b916000526020600020906005020160005b60a0604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001600181526020016020604051908101604052806000815250815260200160026006811115620010f257fe5b815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190620011b092919062001cef565b50608082015181600401555050506006600060036006811115620011d057fe5b81526020019081526020016000208054806001018281620011f2919062001cba565b916000526020600020906005020160005b60a0604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020016001815260200160206040519081016040528060008152508152602001600360068111156200127257fe5b815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030190805190602001906200133092919062001cef565b506080820151816004015550505060066000600460068111156200135057fe5b8152602001908152602001600020805480600101828162001372919062001cba565b916000526020600020906005020160005b60a0604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001600181526020016020604051908101604052806000815250815260200160046006811115620013f257fe5b815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190620014b092919062001cef565b50608082015181600401555050506006600060056006811115620014d057fe5b81526020019081526020016000208054806001018281620014f2919062001cba565b916000526020600020906005020160005b60a0604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020016001815260200160206040519081016040528060008152508152602001600560068111156200157257fe5b815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030190805190602001906200163092919062001cef565b506080820151816004015550505060066000600660068111156200165057fe5b8152602001908152602001600020805480600101828162001672919062001cba565b916000526020600020906005020160005b60a0604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001600181526020016020604051908101604052806000815250815260200160066006811115620016f257fe5b815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190620017b092919062001cef565b506080820151816004015550505060078054806001018281620017d4919062001d76565b916000526020600020900160005b60006006811115620017f057fe5b90919091505550600780548060010182816200180d919062001d76565b916000526020600020900160005b600160068111156200182957fe5b909190915055506007805480600101828162001846919062001d76565b916000526020600020900160005b600260068111156200186257fe5b90919091505550600780548060010182816200187f919062001d76565b916000526020600020900160005b600360068111156200189b57fe5b9091909150555060078054806001018281620018b8919062001d76565b916000526020600020900160005b60046006811115620018d457fe5b9091909150555060078054806001018281620018f1919062001d76565b916000526020600020900160005b600560068111156200190d57fe5b90919091505550600780548060010182816200192a919062001d76565b916000526020600020900160005b600660068111156200194657fe5b909190915055506002805480600101828162001963919062001da5565b916000526020600020900160005b33909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620019d282620019dc6401000000000262000773176401000000009004565b5b50505062001edb565b600060006000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151562001a3c57fe5b600092505b835183101562001b9a5760009150600090505b60028054905081101562001b045760028181548110151562001a7257fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16848481518110151562001ac457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff16141562001af5576001915062001b04565b5b808060010191505062001a54565b81151562001b8b576002805480600101828162001b22919062001da5565b916000526020600020900160005b868681518110151562001b3f57fe5b90602001906020020151909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b5b828060010193505062001a41565b60405180807f736574417574686f72697a65644c69737420737563636573732e000000000000815250601a01905060405180910390203373ffffffffffffffffffffffffffffffffffffffff167f718cff2f30737c5a051976934736d5025bef9cea6b95e5c682a3d15353e3ab846001600181111562001c1657fe5b6040518082815260200191505060405180910390a35b5b50505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062001c7657805160ff191683800117855562001ca7565b8280016001018555821562001ca7579182015b8281111562001ca657825182559160200191906001019062001c89565b5b50905062001cb6919062001dd4565b5090565b81548183558181151162001cea5760050281600502836000526020600020918201910162001ce9919062001dfc565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062001d3257805160ff191683800117855562001d63565b8280016001018555821562001d63579182015b8281111562001d6257825182559160200191906001019062001d45565b5b50905062001d72919062001dd4565b5090565b81548183558181151162001da05781836000526020600020918201910162001d9f919062001dd4565b5b505050565b81548183558181151162001dcf5781836000526020600020918201910162001dce919062001dd4565b5b505050565b62001df991905b8082111562001df557600081600090555060010162001ddb565b5090565b90565b62001e8c91905b8082111562001e885760006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600282016000905560038201600062001e76919062001e8f565b60048201600090555060050162001e03565b5090565b90565b50805460018160011615610100020316600290046000825580601f1062001eb7575062001ed8565b601f01602090049060005260206000209081019062001ed7919062001dd4565b5b50565b6140b88062001eeb6000396000f300606060405236156100ef576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806315279260146100f15780632972b0f0146101485780632a9ac2da1461019f578063513cb40f146101de578063521987411461027757806362bca73d1461031057806379ba5097146103a957806381c4f3a3146103bb57806388fd9ba8146104125780638da5cb5b146104485780639467a1511461049a578063a79cc09b1461053b578063ad121974146105d4578063b3f731b414610613578063c0dafe4514610652578063d4ee1d90146106eb578063f2fde38b1461073d575bfe5b34156100f957fe5b610146600480803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091905050610773565b005b341561015057fe5b610185600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506109bc565b604051808215151515815260200191505060405180910390f35b34156101a757fe5b6101dc600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610af6565b005b34156101e657fe5b6101ee610d5f565b604051808060200182810382528381815181526020019150805190602001908083836000831461023d575b80518252602083111561023d57602082019150602081019050602083039250610219565b505050905090810190601f1680156102695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561027f57fe5b6102876110d4565b60405180806020018281038252838181518152602001915080519060200190808383600083146102d6575b8051825260208311156102d6576020820191506020810190506020830392506102b2565b505050905090810190601f1680156103025780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561031857fe5b61032061122b565b604051808060200182810382528381815181526020019150805190602001908083836000831461036f575b80518252602083111561036f5760208201915060208101905060208303925061034b565b505050905090810190601f16801561039b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156103b157fe5b6103b9611616565b005b34156103c357fe5b6103f8600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506117f6565b604051808215151515815260200191505060405180910390f35b341561041a57fe5b610446600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611930565b005b341561045057fe5b6104586124f8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156104a257fe5b610539600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061251e565b005b341561054357fe5b61054b612a0e565b604051808060200182810382528381815181526020019150805190602001908083836000831461059a575b80518252602083111561059a57602082019150602081019050602083039250610576565b505050905090810190601f1680156105c65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156105dc57fe5b610611600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050612aac565b005b341561061b57fe5b610650600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050612d3b565b005b341561065a57fe5b61066261311b565b60405180806020018281038252838181518152602001915080519060200190808383600083146106b1575b8051825260208311156106b15760208201915060208101905060208303925061068d565b505050905090810190601f1680156106dd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156106f357fe5b6106fb613490565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561074557fe5b610771600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506134b6565b005b600060006000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107d257fe5b600092505b83518310156109245760009150600090505b6002805490508110156108935760028181548110151561080557fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16848481518110151561085657fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614156108855760019150610893565b5b80806001019150506107e9565b81151561091657600280548060010182816108ae9190613e63565b916000526020600020900160005b86868151811015156108ca57fe5b90602001906020020151909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b5b82806001019350506107d7565b60405180807f736574417574686f72697a65644c69737420737563636573732e000000000000815250601a01905060405180910390203373ffffffffffffffffffffffffffffffffffffffff167f718cff2f30737c5a051976934736d5025bef9cea6b95e5c682a3d15353e3ab846001600181111561099f57fe5b6040518082815260200191505060405180910390a35b5b50505050565b600060006000600460008581526020019081526020016000208054905014156109e85760009150610aef565b600090505b6004600084815260200190815260200160002080549050811015610aea578373ffffffffffffffffffffffffffffffffffffffff166004600085815260200190815260200160002082815481101515610a4257fe5b906000526020600020906005020160005b5060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610adc5760016004600085815260200190815260200160002082815481101515610ab657fe5b906000526020600020906005020160005b50600201541415610adb5760019150610aef565b5b5b80806001019150506109ed565b600091505b5092915050565b60006000600060009150600090505b600280549050811015610b98573373ffffffffffffffffffffffffffffffffffffffff16600282815481101515610b3857fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610b8a5760019150610b98565b5b8080600101915050610b05565b811515610ba55760006000fd5b60008573ffffffffffffffffffffffffffffffffffffffff1614151515610bcc5760006000fd5b600092505b6004600085815260200190815260200160002080549050831015610cc6578473ffffffffffffffffffffffffffffffffffffffff166004600086815260200190815260200160002084815481101515610c2657fe5b906000526020600020906005020160005b5060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610cb85760006004600086815260200190815260200160002084815481101515610c9a57fe5b906000526020600020906005020160005b5060020181905550610cc6565b5b8280600101935050610bd1565b60405180807f72656d6f7665206772616e74207573657220737563636573732e000000000000815250601a01905060405180910390203373ffffffffffffffffffffffffffffffffffffffff167f718cff2f30737c5a051976934736d5025bef9cea6b95e5c682a3d15353e3ab8460016001811115610d4157fe5b6040518082815260200191505060405180910390a35b5b5050505050565b610d67613e8f565b610d6f613ea3565b610d77613e8f565b6000610d81613e8f565b600060e06040519081016040528060006006811115610d9c57fe5b815260200160016006811115610dae57fe5b815260200160026006811115610dc057fe5b815260200160036006811115610dd257fe5b815260200160046006811115610de457fe5b815260200160056006811115610df657fe5b815260200160066006811115610e0857fe5b815250945060206040519081016040528060008152509350600092505b60078310156110c85760206040519081016040528060008152509150600090505b600460008481526020019081526020016000208054905081101561102657610ebe82610e71856135b3565b604060405190810160405280600181526020017f40000000000000000000000000000000000000000000000000000000000000008152506020604051908101604052806000815250613701565b9150610fb282610f386004600087815260200190815260200160002084815481101515610ee757fe5b906000526020600020906005020160005b5060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16613a74565b604060405190810160405280600181526020017f2600000000000000000000000000000000000000000000000000000000000000815250610fad6004600089815260200190815260200160002086815481101515610f9257fe5b906000526020600020906005020160005b50600201546135b3565b613701565b915060016004600085815260200190815260200160002080549050038110156110185761101582604060405190810160405280600181526020017f2400000000000000000000000000000000000000000000000000000000000000815250613c82565b91505b5b8080600101915050610e46565b600160070383101561108b5761108484602060405190810160405280600081525084604060405190810160405280600181526020017f2400000000000000000000000000000000000000000000000000000000000000815250613701565b93506110ba565b6110b7846020604051908101604052806000815250846020604051908101604052806000815250613701565b93505b5b8280600101935050610e25565b8395505b505050505090565b6110dc613e8f565b6000600090505b6002805490508110156112265760016002805490500381141561116a576111638261115e60028481548110151561111657fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16613a74565b613c82565b9150611218565b611215826111c860028481548110151561118057fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16613a74565b6020604051908101604052806000815250604060405190810160405280600181526020017f2400000000000000000000000000000000000000000000000000000000000000815250613701565b91505b5b80806001019150506110e3565b5b5090565b611233613e8f565b61123b613e8f565b60006000600060206040519081016040528060008152509350600092505b60058054905083101561160b5760009150600090505b60046000848152602001908152602001600020805490508110156115f2573373ffffffffffffffffffffffffffffffffffffffff1660046000858152602001908152602001600020828154811015156112c457fe5b906000526020600020906005020160005b5060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156115e4576113f18461138e600460008781526020019081526020016000208481548110151561133d57fe5b906000526020600020906005020160005b5060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16613a74565b604060405190810160405280600181526020017f40000000000000000000000000000000000000000000000000000000000000008152506113ec6005888154811015156113d757fe5b906000526020600020900160005b50546135b3565b613701565b935061153884604060405190810160405280600181526020017f4000000000000000000000000000000000000000000000000000000000000000815250600460008781526020019081526020016000208481548110151561144e57fe5b906000526020600020906005020160005b506003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114f75780601f106114cc576101008083540402835291602001916114f7565b820191906000526020600020905b8154815290600101906020018083116114da57829003601f168201915b5050505050604060405190810160405280600181526020017f4000000000000000000000000000000000000000000000000000000000000000815250613701565b93506115d98460206040519081016040528060008152506115c3600460008881526020019081526020016000208581548110151561157257fe5b906000526020600020906005020160005b5060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16613a74565b6020604051908101604052806000815250613701565b9350600191506115f2565b5b808060010191505061126f565b81156115fd5761160b565b5b8280600101935050611259565b8394505b5050505090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156116735760006000fd5b7f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b565b600060006000600660008581526020019081526020016000208054905014156118225760009150611929565b600090505b6006600084815260200190815260200160002080549050811015611924578373ffffffffffffffffffffffffffffffffffffffff16600660008581526020019081526020016000208281548110151561187c57fe5b906000526020600020906005020160005b5060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561191657600160066000858152602001908152602001600020828154811015156118f057fe5b906000526020600020906005020160005b506002015414156119155760019150611929565b5b5b8080600101915050611827565b600091505b5092915050565b60006000600060009150600090505b6002805490508110156119d2573373ffffffffffffffffffffffffffffffffffffffff1660028281548110151561197257fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156119c457600191506119d2565b5b808060010191505061193f565b8115156119df5760006000fd5b60008473ffffffffffffffffffffffffffffffffffffffff1614151515611a065760006000fd5b600092506004600060006006811115611a1b57fe5b81526020019081526020016000208054806001018281611a3b9190613ecb565b916000526020600020906005020160005b60a0604051908101604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff168152602001600181526020016020604051908101604052806000815250815260200160006006811115611aba57fe5b815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190611b76929190613efd565b50608082015181600401555050506004600060016006811115611b9557fe5b81526020019081526020016000208054806001018281611bb59190613ecb565b916000526020600020906005020160005b60a0604051908101604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff168152602001600181526020016020604051908101604052806000815250815260200160016006811115611c3457fe5b815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190611cf0929190613efd565b50608082015181600401555050506004600060026006811115611d0f57fe5b81526020019081526020016000208054806001018281611d2f9190613ecb565b916000526020600020906005020160005b60a0604051908101604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff168152602001600181526020016020604051908101604052806000815250815260200160026006811115611dae57fe5b815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190611e6a929190613efd565b50608082015181600401555050506004600060036006811115611e8957fe5b81526020019081526020016000208054806001018281611ea99190613ecb565b916000526020600020906005020160005b60a0604051908101604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff168152602001600181526020016020604051908101604052806000815250815260200160036006811115611f2857fe5b815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190611fe4929190613efd565b5060808201518160040155505050600460006004600681111561200357fe5b815260200190815260200160002080548060010182816120239190613ecb565b916000526020600020906005020160005b60a0604051908101604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1681526020016001815260200160206040519081016040528060008152508152602001600460068111156120a257fe5b815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301908051906020019061215e929190613efd565b5060808201518160040155505050600460006005600681111561217d57fe5b8152602001908152602001600020805480600101828161219d9190613ecb565b916000526020600020906005020160005b60a0604051908101604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff16815260200160018152602001602060405190810160405280600081525081526020016005600681111561221c57fe5b815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030190805190602001906122d8929190613efd565b506080820151816004015550505060046000600660068111156122f757fe5b815260200190815260200160002080548060010182816123179190613ecb565b916000526020600020906005020160005b60a0604051908101604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff16815260200160018152602001602060405190810160405280600081525081526020016006600681111561239657fe5b815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190612452929190613efd565b506080820151816004015550505060405180807f6772616e74207573657220616c6c20737563636573732e000000000000000000815250601701905060405180910390203373ffffffffffffffffffffffffffffffffffffffff167f718cff2f30737c5a051976934736d5025bef9cea6b95e5c682a3d15353e3ab84600160018111156124db57fe5b6040518082815260200191505060405180910390a35b5b50505050565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006000600060006000600060009150600090505b6002805490508110156125c6573373ffffffffffffffffffffffffffffffffffffffff1660028281548110151561256657fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156125b857600191506125c6565b5b8080600101915050612533565b8115156125d35760006000fd5b60008a73ffffffffffffffffffffffffffffffffffffffff16141515156125fa5760006000fd5b60009550600094505b600460008a8152602001908152602001600020805490508510156126f7578973ffffffffffffffffffffffffffffffffffffffff16600460008b81526020019081526020016000208681548110151561265857fe5b906000526020600020906005020160005b5060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156126e9576001600460008b8152602001908152602001600020868154811015156126cc57fe5b906000526020600020906005020160005b505050600195506126f7565b5b8480600101955050612603565b600093505b60058054905084101561281657600092505b6004600060058681548110151561272157fe5b906000526020600020900160005b5054815260200190815260200160002080549050831015612808578973ffffffffffffffffffffffffffffffffffffffff166004600060058781548110151561277457fe5b906000526020600020900160005b505481526020019081526020016000208481548110151561279f57fe5b906000526020600020906005020160005b5060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156127fa5760019550612808565b5b828060010193505061270e565b5b83806001019450506126fc565b85151561297057600460008a815260200190815260200160002080548060010182816128429190613ecb565b916000526020600020906005020160005b60a0604051908101604052808e73ffffffffffffffffffffffffffffffffffffffff1681526020018b73ffffffffffffffffffffffffffffffffffffffff168152602001600181526020018c81526020018d815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190612961929190613efd565b50608082015181600401555050505b60405180807f6772616e74207573657220737563636573732e00000000000000000000000000815250601301905060405180910390203373ffffffffffffffffffffffffffffffffffffffff167f718cff2f30737c5a051976934736d5025bef9cea6b95e5c682a3d15353e3ab84600160018111156129eb57fe5b6040518082815260200191505060405180910390a35b5b50505050505050505050565b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612aa45780601f10612a7957610100808354040283529160200191612aa4565b820191906000526020600020905b815481529060010190602001808311612a8757829003601f168201915b505050505081565b60006000600060009150600090505b600280549050811015612b4e573373ffffffffffffffffffffffffffffffffffffffff16600282815481101515612aee57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612b405760019150612b4e565b5b8080600101915050612abb565b811515612b5b5760006000fd5b60008573ffffffffffffffffffffffffffffffffffffffff1614151515612b825760006000fd5b600092505b6006600085815260200190815260200160002080549050831015612c7c578473ffffffffffffffffffffffffffffffffffffffff166006600086815260200190815260200160002084815481101515612bdc57fe5b906000526020600020906005020160005b5060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612c6e5760006006600086815260200190815260200160002084815481101515612c5057fe5b906000526020600020906005020160005b5060020181905550612c7c565b5b8280600101935050612b87565b60405180807f72656d6f7665206772616e742075736572207375636365737320666f7220706181526020017f636b2e0000000000000000000000000000000000000000000000000000000000815250602301905060405180910390203373ffffffffffffffffffffffffffffffffffffffff167f718cff2f30737c5a051976934736d5025bef9cea6b95e5c682a3d15353e3ab8460016001811115612d1d57fe5b6040518082815260200191505060405180910390a35b5b5050505050565b6000600060006000600060009150600090505b600280549050811015612de1573373ffffffffffffffffffffffffffffffffffffffff16600282815481101515612d8157fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612dd35760019150612de1565b5b8080600101915050612d4e565b811515612dee5760006000fd5b60008773ffffffffffffffffffffffffffffffffffffffff1614151515612e155760006000fd5b60009450600093505b6006600087815260200190815260200160002080549050841015612f12578673ffffffffffffffffffffffffffffffffffffffff166006600088815260200190815260200160002085815481101515612e7357fe5b906000526020600020906005020160005b5060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612f045760016006600088815260200190815260200160002085815481101515612ee757fe5b906000526020600020906005020160005b50505060019450612f12565b5b8380600101945050612e1e565b8415156130805760009250600660008781526020019081526020016000208054806001018281612f429190613ecb565b916000526020600020906005020160005b60a0604051908101604052808b73ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff16815260200160018152602001602060405190810160405280600081525081526020018a815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190613071929190613efd565b50608082015181600401555050505b60405180807f6772616e74207573657220666f72207061636b20737563636573732e00000000815250601c01905060405180910390203373ffffffffffffffffffffffffffffffffffffffff167f718cff2f30737c5a051976934736d5025bef9cea6b95e5c682a3d15353e3ab84600160018111156130fb57fe5b6040518082815260200191505060405180910390a35b5b50505050505050565b613123613e8f565b61312b613ea3565b613133613e8f565b600061313d613e8f565b600060e0604051908101604052806000600681111561315857fe5b81526020016001600681111561316a57fe5b81526020016002600681111561317c57fe5b81526020016003600681111561318e57fe5b8152602001600460068111156131a057fe5b8152602001600560068111156131b257fe5b8152602001600660068111156131c457fe5b815250945060206040519081016040528060008152509350600092505b60078310156134845760206040519081016040528060008152509150600090505b60066000848152602001908152602001600020805490508110156133e25761327a8261322d856135b3565b604060405190810160405280600181526020017f40000000000000000000000000000000000000000000000000000000000000008152506020604051908101604052806000815250613701565b915061336e826132f460066000878152602001908152602001600020848154811015156132a357fe5b906000526020600020906005020160005b5060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16613a74565b604060405190810160405280600181526020017f2600000000000000000000000000000000000000000000000000000000000000815250613369600660008981526020019081526020016000208681548110151561334e57fe5b906000526020600020906005020160005b50600201546135b3565b613701565b915060016006600085815260200190815260200160002080549050038110156133d4576133d182604060405190810160405280600181526020017f2400000000000000000000000000000000000000000000000000000000000000815250613c82565b91505b5b8080600101915050613202565b60016007038310156134475761344084602060405190810160405280600081525084604060405190810160405280600181526020017f2400000000000000000000000000000000000000000000000000000000000000815250613701565b9350613476565b613473846020604051908101604052806000815250846020604051908101604052806000815250613701565b93505b5b82806001019350506131e1565b8395505b505050505090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561350f57fe5b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561356d5760006000fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b50565b6135bb613e8f565b600060006000600085141561360857604060405190810160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525093506136f9565b600092508491505b600082111561363557600a8281151561362557fe5b0491508280600101935050613610565b8260ff166040518059106136465750595b908082528060200260200182016040525b5093506001830390505b60008511156136f8576030600a8681151561367857fe5b06017f01000000000000000000000000000000000000000000000000000000000000000284828060019003935060ff168151811015156136b457fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a858115156136f057fe5b049450613661565b5b505050919050565b613709613e8f565b613711613f7d565b613719613f7d565b613721613f7d565b613729613f7d565b613731613e8f565b613739613f7d565b600060008c97508b96508a95508994508451865188518a510101016040518059106137615750595b908082528060200260200182016040525b50935083925060009150600090505b875181101561383557878181518110151561379857fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156137f757fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b8080600101915050613781565b600090505b86518110156138ee57868181518110151561385157fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156138b057fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b808060010191505061383a565b600090505b85518110156139a757858181518110151561390a57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561396957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b80806001019150506138f3565b600090505b8451811015613a605784818151811015156139c357fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515613a2257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b80806001019150506139ac565b8398505b5050505050505050949350505050565b613a7c613e8f565b60006000602a604051805910613a8f5750595b908082528060200260200182016040525b5092507f3000000000000000000000000000000000000000000000000000000000000000836000815181101515613ad357fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000836001815181101515613b3357fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350602991505b60028260ff16101515613c7a57600f84169050601084811515613b8757fe5b049350600a8160ff161015613c0257603081017f010000000000000000000000000000000000000000000000000000000000000002838360ff16815181101515613bcd57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350613c6d565b6061600a8203017f010000000000000000000000000000000000000000000000000000000000000002838360ff16815181101515613c3c57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b5b81600190039150613b68565b5b5050919050565b613c8a613e8f565b613c92613f7d565b613c9a613f7d565b613ca2613e8f565b613caa613f7d565b600060008895508794508451865101604051805910613cc65750595b908082528060200260200182016040525b50935083925060009150600090505b8551811015613d9a578581815181101515613cfd57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515613d5c57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b8080600101915050613ce6565b600090505b8451811015613e53578481815181101515613db657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515613e1557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b8080600101915050613d9f565b8396505b50505050505092915050565b815481835581811511613e8a57818360005260206000209182019101613e899190613f91565b5b505050565b602060405190810160405280600081525090565b60e0604051908101604052806007905b6000815260200190600190039081613eb35790505090565b815481835581811511613ef857600502816005028360005260206000209182019101613ef79190613fb6565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613f3e57805160ff1916838001178555613f6c565b82800160010185558215613f6c579182015b82811115613f6b578251825591602001919060010190613f50565b5b509050613f799190613f91565b5090565b602060405190810160405280600081525090565b613fb391905b80821115613faf576000816000905550600101613f97565b5090565b90565b61404191905b8082111561403d5760006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600282016000905560038201600061402c9190614044565b600482016000905550600501613fbc565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061406a5750614089565b601f0160209004906000526020600020908101906140889190613f91565b5b505600a165627a7a723058207aba2efb1620b4e7b8f4ebfb2591161875a6c04786aefb6bc2c86605fec856480029";

    protected Authorized(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Authorized(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public List<ResponseEventResponse> getResponseEvents(TransactionReceipt transactionReceipt) {
        final Event event = new Event("Response", 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(event, transactionReceipt);
        ArrayList<ResponseEventResponse> responses = new ArrayList<ResponseEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            ResponseEventResponse typedResponse = new ResponseEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.errmsg = (byte[]) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.errno = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ResponseEventResponse> responseEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        final Event event = new Event("Response", 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(event));
        return web3j.ethLogObservable(filter).map(new Func1<Log, ResponseEventResponse>() {
            @Override
            public ResponseEventResponse call(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(event, log);
                ResponseEventResponse typedResponse = new ResponseEventResponse();
                typedResponse.log = log;
                typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.errmsg = (byte[]) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.errno = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public List<OwnerUpdateEventResponse> getOwnerUpdateEvents(TransactionReceipt transactionReceipt) {
        final Event event = new Event("OwnerUpdate", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}));
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(event, transactionReceipt);
        ArrayList<OwnerUpdateEventResponse> responses = new ArrayList<OwnerUpdateEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            OwnerUpdateEventResponse typedResponse = new OwnerUpdateEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._prevOwner = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._newOwner = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<OwnerUpdateEventResponse> ownerUpdateEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        final Event event = new Event("OwnerUpdate", 
                Arrays.<TypeReference<?>>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}));
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(event));
        return web3j.ethLogObservable(filter).map(new Func1<Log, OwnerUpdateEventResponse>() {
            @Override
            public OwnerUpdateEventResponse call(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(event, log);
                OwnerUpdateEventResponse typedResponse = new OwnerUpdateEventResponse();
                typedResponse.log = log;
                typedResponse._prevOwner = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._newOwner = (String) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public RemoteCall<TransactionReceipt> setAuthorizedList(List<String> _list) {
        final Function function = new Function(
                "setAuthorizedList", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<Address>(
                        org.web3j.abi.Utils.typeMap(_list, Address.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Boolean> isAuthorized(String _addr, BigInteger _period) {
        final Function function = new Function("isAuthorized", 
                Arrays.<Type>asList(new Address(_addr),
                new Uint256(_period)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> removeGrantUser(String _addr, BigInteger _period) {
        final Function function = new Function(
                "removeGrantUser", 
                Arrays.<Type>asList(new Address(_addr),
                new Uint256(_period)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> authorizedUsers() {
        final Function function = new Function("authorizedUsers", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> authorizedAddresses() {
        final Function function = new Function("authorizedAddresses", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> warrantInfo() {
        final Function function = new Function("warrantInfo", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> acceptOwnership() {
        final Function function = new Function(
                "acceptOwnership", 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Boolean> isAuthorizedForPack(String _addr, BigInteger _packType) {
        final Function function = new Function("isAuthorizedForPack", 
                Arrays.<Type>asList(new Address(_addr),
                new Uint256(_packType)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> grantUserAll(String _addr) {
        final Function function = new Function(
                "grantUserAll", 
                Arrays.<Type>asList(new Address(_addr)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> owner() {
        final Function function = new Function("owner", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> grantUser(String _addr, BigInteger _period, String _content, String _docAddress) {
        final Function function = new Function(
                "grantUser", 
                Arrays.<Type>asList(new Address(_addr),
                new Uint256(_period),
                new Utf8String(_content),
                new Address(_docAddress)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> alias() {
        final Function function = new Function("alias", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> removeGrantUserForPack(String _addr, BigInteger _packType) {
        final Function function = new Function(
                "removeGrantUserForPack", 
                Arrays.<Type>asList(new Address(_addr),
                new Uint256(_packType)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> grantUserForPack(String _addr, BigInteger _packType) {
        final Function function = new Function(
                "grantUserForPack", 
                Arrays.<Type>asList(new Address(_addr),
                new Uint256(_packType)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> authorizedUsersForPack() {
        final Function function = new Function("authorizedUsersForPack", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> newOwner() {
        final Function function = new Function("newOwner", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> transferOwnership(String _newOwner) {
        final Function function = new Function(
                "transferOwnership", 
                Arrays.<Type>asList(new Address(_newOwner)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public static RemoteCall<Authorized> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _alias, List<String> _list) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new Utf8String(_alias),
                new org.web3j.abi.datatypes.DynamicArray<Address>(
                        org.web3j.abi.Utils.typeMap(_list, Address.class))));
        return deployRemoteCall(Authorized.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static RemoteCall<Authorized> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _alias, List<String> _list) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new Utf8String(_alias),
                new org.web3j.abi.datatypes.DynamicArray<Address>(
                        org.web3j.abi.Utils.typeMap(_list, Address.class))));
        return deployRemoteCall(Authorized.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static Authorized load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Authorized(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    public static Authorized load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Authorized(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static class ResponseEventResponse {
        public Log log;

        public String from;

        public byte[] errmsg;

        public BigInteger errno;
    }

    public static class OwnerUpdateEventResponse {
        public Log log;

        public String _prevOwner;

        public String _newOwner;
    }
}
